version: "3.4"

services:
  ros-master:
    network_mode: host
    image: ros:melodic-ros-core
    container_name: ros-master
    environment:
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - ROS_IP=${ADRESS_IP}
    command: stdbuf -o L roscore
  
  sonia-ros-bridge:
      image: ghcr.io/sonia-auv/sonia-ros-bridge/sonia-ros-bridge:arm64-perception-latest
      container_name: sonia-ros-bridge
      network_mode: host
      environment:
        - ROS_MASTER_URI=http://${ADRESS_IP}:11311
        - ROS_IP=${ADRESS_IP}
      depends_on:
        - ros-master
      command:
        - roslaunch
        - --wait
        - rosbridge_server
        - rosbridge_websocket.launch
  
  sonia-flexbe:
    image: ghcr.io/sonia-auv/sonia-flexbe/sonia-flexbe:arm64-perception-develop
    container_name: sonia-flexbe
    network_mode: host
    environment:
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - ROS_IP=${ADRESS_IP}
    depends_on:
      - ros-master
    command:
      - roslaunch
      - --wait
      - sonia_flexbe
      - sonia_flexbe.launch
    volumes:
      - /home/sonia/sonia:/home/sonia/ros_sonia_ws/src/behaviors

  provider_kill_mission:
    image: ghcr.io/sonia-auv/provider_kill_mission/provider_kill_mission:arm64-perception-develop
    container_name: provider_kill_mission
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    depends_on:
      - ros-master

#  proc_mapping:
#    image: ghcr.io/sonia-auv/proc_mapping/proc_mapping:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_navigation:
#    image: ghcr.io/sonia-auv/proc_navigation/proc_navigation:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

  proc_actuators:
    image: ghcr.io/sonia-auv/proc_actuators/proc_actuators:arm64-perception-develop
    container_name: proc_actuators
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
    network_mode: host
    depends_on:
      - ros-master

#  proc_hydrophone:
#    image: ghcr.io/sonia-auv/proc_hydrophone/proc_hydrophone:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_sonar:
#    image: ghcr.io/sonia-auv/proc_sonar/proc_sonar:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_detection:
#    image: ghcr.io/sonia-auv/proc_detection/proc_detection:arm64-perception-feature-tensorflow-gpu
#    container_name: proc_detection
#    environment:
#      - ROS_IP=${ADRESS_IP}
#      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#      - PYTHONUNBUFFERED=1
#      - PYTHON_EXECUTABLE=/usr/bin/python3
#      - NVIDIA_VISIBLE_DEVICES=all
#    network_mode: host
#    privileged: true
#    depends_on:
#      - ros-master
#    volumes:
#      - /home/sonia/ssd/object_detection:/home/sonia/ros_sonia_ws/src/proc_detection/external
#      - /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra
#      - /usr/local/cuda-10.2/lib64:/usr/local/cuda-10.2/lib64
#      - /proc:/proc
#    devices:
#      - /dev/nvhost-ctrl:/dev/nvhost-ctrl 
#      - /dev/nvhost-ctrl-gpu:/dev/nvhost-ctrl-gpu
#      - /dev/nvhost-prof-gpu:/dev/nvhost-prof-gpu 
#      - /dev/nvmap:/dev/nvmap 
#      - /dev/nvhost-gpu:/dev/nvhost-gpu
#    deploy:
#      resources:
#        reservations:
#          devices:
#          - driver: nvidia
#            capabilities: [gpu]
#    command: stdbuf -o L roslaunch --wait proc_detection proc_detection.launchfilterchaifilterchaifilterchaifilterchai
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: hostfilterchai
    depends_on:
      - ros-master

#  provider_hydrophone:
#    image: ghcr.io/sonia-auv/provider_hydrophone/provider_hydrophone:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

  provider_thruster:
    image: ghcr.io/sonia-auv/provider_thruster/provider_thruster:arm64-perception-develop
    container_name: provider_thruster
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    depends_on:
      - ros-master

  provider_imu:
    image: ghcr.io/sonia-auv/provider_imu/provider_imu:arm64-perception-develop
    container_name: provider_imu
    environment:
    - ROS_IP=${ADRESS_IP}
    - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    privileged: true
    volumes:
      - /dev/IMU:/dev/IMU
    depends_on:
      - ros-master

  provider_depth:
    image: ghcr.io/sonia-auv/provider_depth/provider_depth:arm64-perception-develop
    container_name: provider_depth
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    privileged: true
    volumes:
      - /dev/DEPTH:/dev/DEPTH
    depends_on:
      - ros-master

  provider_power:
    image: ghcr.io/sonia-auv/provider_power/provider_power:arm64-perception-develop
    container_name: provider_power
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
    network_mode: host
    depends_on:
      - ros-master

  provider_actuators:
    image: ghcr.io/sonia-auv/provider_actuators/provider_actuators:arm64-perception-develop
    container_name: provider_actuators
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
    network_mode: host
    depends_on:
      - ros-master
      
  provider_system:
    image: ghcr.io/sonia-auv/provider_system/provider_system:arm64-perception-develop
    container_name: provider_system
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
    network_mode: host
    depends_on:
      - ros-master

#  provider_sonar:
#   image: ghcr.io/sonia-auv/provider_sonar/provider_sonar:arm64-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

  interface_rs485:
    image: ghcr.io/sonia-auv/interface_rs485/interface_rs485:arm64-perception-develop
    container_name: interface_rs485
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    privileged: true
    volumes:
      - /dev/RS485:/dev/RS485
    depends_on:
      - ros-master

  proc_image_processing:
    image: ghcr.io/sonia-auv/proc_image_processing/proc_image_processing:arm64-perception-feature-move-filterchain-config
    container_name: proc_image_processing
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    volumes:
      - /home/sonia/ssd/config_filterchain:/home/sonia/ros_sonia_ws/src/proc_image_processing/config
    depends_on:
      - ros-master
    command: stdbuf -o L roslaunch --wait proc_image_processing proc_image_processing.launch

  provider_vision:
    image: ghcr.io/sonia-auv/provider_vision/provider_vision:arm64-perception-feature-resize-two-cam
    container_name: provider_vision
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    privileged: true
    devices:
      - /dev/CAM0:/dev/CAM0
      - /dev/CAM1:/dev/CAM1
    depends_on:
      - ros-master
    command: stdbuf -o L roslaunch --wait provider_vision provider_vision.launch

  simulink_monitor:
    image: ghcr.io/sonia-auv/simulink-monitor/simulink-monitor:arm64-perception-latest
    container_name: simulink_monitor
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    privileged: true
    depends_on:
      - ros-master

  octopus_telemetry:
    image: ghcr.io/sonia-auv/octopus-telemetry:develop
    container_name: octopus_telemetry
    network_mode: host
    depends_on: 
      - sonia-ros-bridge

  proc_control:
    image: ghcr.io/sonia-auv/proc_control/proc_control:arm64-perception-develop
    container_name: proc_control
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    depends_on:
      - ros-master
