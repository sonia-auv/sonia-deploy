version: "3.9"

services:
  ros-master:
    network_mode: host
    image: ros:melodic-ros-core
    container_name: ros-master
    command: stdbuf -o L roscore

#  sonia-ros-bridge:
#      image: ghcr.io/sonia-auv/sonia-ros-bridge/sonia-ros-bridge:x86-perception-latest
#      container_name: sonia-ros-bridge
#      network_mode: host
#      depends_on:
#        - ros-master
#      command:
#        - roslaunch
#        - --wait
#        - rosbridge_server
#        - rosbridge_websocket.launch

#  octopus_telemetry:
#    image: ghcr.io/sonia-auv/octopus-telemetry:local
#    container_name: octopus_telemetry
#    network_mode: host
#    depends_on: 
#      - sonia-ros-bridge

#  proc_image_processing:
#    image: ghcr.io/sonia-auv/proc_image_processing/proc_image_processing:x86-perception-latest
#    container_name: proc_image_processing
#    network_mode: host
#    depends_on:
#      - ros-master
#    volumes: 
#      - ~/Bags:/bags

#  provider_kill_mission:
#    image: ghcr.io/sonia-auv/provider_kill_mission/provider_kill_mission:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_mapping:
#    image: ghcr.io/sonia-auv/proc_mapping/proc_mapping:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_navigation:
#    image: ghcr.io/sonia-auv/proc_navigation/proc_navigation:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_actuators:
#    image: ghcr.io/sonia-auv/proc_actuators/proc_actuators:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_hydrophone:
#    image: ghcr.io/sonia-auv/proc_hydrophone/proc_hydrophone:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  proc_sonar:
#    image: ghcr.io/sonia-auv/proc_sonar/proc_sonar:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  provider_dvl:
#    image: ghcr.io/sonia-auv/provider_dvl/provider_dvl:x86-perception-feature-pathfinder-dvl
#    container_name: provider_dvl
#    environment:
#      - ROS_IP=${ADRESS_IP}
#      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#    network_mode: host
#    depends_on:
#      - ros-master

#  provider_hydrophone:
#    image: ghcr.io/sonia-auv/provider_hydrophone/provider_hydrophone:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

#  provider_thruster:
#    image: ghcr.io/sonia-auv/provider_thruster/provider_thruster:x86-perception-feature-matlab-proc-control
#    container_name: provider_thruster
#    environment:
#      - ROS_IP=${ADRESS_IP}
#      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#    network_mode: host
#    privileged: true
#    depends_on:
#      - ros-master

#  provider_imu:
#    image: ghcr.io/sonia-auv/provider_imu/provider_imu:x86-perception-feature-vn-100
#    container_name: provider_imu
#    environment:
#    - ROS_IP=${ADRESS_IP}
#    - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#    network_mode: host
#    privileged: true
#    volumes:
#      - /dev/IMU:/dev/IMU
#    depends_on:
#      - ros-master

#  provider_power:
#    image: ghcr.io/sonia-auv/provider_power/provider_power:x86-perception-feature-log-auv8
#    container_name: provider_power
#    environment:
#      - ROS_IP=${ADRESS_IP}
#      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
#    network_mode: host
#    depends_on:
#      - ros-master

 provider_actuators:
    image: ghcr.io/sonia-auv/provider_actuators/provider_actuators:x86-perception-fix-update-docker
    container_name: proc_actuators
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
   network_mode: host
   depends_on:
      - ros-master

#  provider_sonar:
#   image: ghcr.io/sonia-auv/provider_sonar/provider_sonar:x86-perception-latest
#    network_mode: host
#    depends_on:
#      - ros-master

  interface_rs485:
    image: ghcr.io/sonia-auv/interface_rs485/interface_rs485:x86-perception-feature-local-debug
    container_name: interface_rs485
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - AUV=${AUV}
    network_mode: host
    privileged: true
    volumes:
     - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
     - ros-master


#  provider_vision:
#    image: ghcr.io/sonia-auv/provider_vision/provider_vision:x86-perception-feature-testing-modif
#    container_name: provider_vision
#    environment:
#      - ROS_IP=${ADRESS_IP}
#      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#    network_mode: host
#    privileged: true
#    devices:
#      - /dev/CAM0:/dev/CAM0
#    depends_on:
#      - ros-master
#    command: stdbuf -o L roslaunch --wait provider_vision provider_vision.launch

#  simulink_monitor:
#      image: ghcr.io/sonia-auv/simulink-monitor/simulink-monitor:x86-perception-latest
#      container_name: simulink_monitor
#      environment:
#        - ROS_IP=${ADRESS_IP}
#        - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#      network_mode: host
#      privileged: true
#      ports: 
#        - "22:22"
#        - "17725:17725"
#      depends_on:
#        - ros-master

# proc_control:
#     image: ghcr.io/sonia-auv/proc_control/proc_control:x86-perception-feature-auv8-dockerrise-proc
#     container_name: proc_control
#     environment:
#       - ROS_IP=${ADRESS_IP}
#       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
#     network_mode: host
#     privileged: true
#     depends_on:
#       - ros-master

  # provider_underwater_com:
  #     image: ghcr.io/sonia-auv/provider_underwater_com/provider_underwater_com:x86-perception-fix-refactor-driver
  #     container_name: provider_underwater_com
  #     environment:
  #       - ROS_IP=${ADRESS_IP}
  #       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     network_mode: host
  #     privileged: true
  #     devices:
  #       - /dev/ttyUSB0:/dev/ttyUSB0
  #     depends_on:
  #       - ros-master
  #     command: stdbuf -o L roslaunch --wait provider_underwater_com provider_underwater_com.launch

  # proc_underwater_com:
  #     image: ghcr.io/sonia-auv/proc_underwater_com/proc_underwater_com:x86-perception-develop
  #     container_name: proc_underwater_com
  #     environment:
  #       - ROS_IP=${ADRESS_IP}
  #       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #       - AUV=${AUV}
  #     network_mode: host
  #     depends_on:
  #       - ros-master
  #     command: stdbuf -o L roslaunch --wait proc_underwater_com proc_underwater_com.launch
