version: "3.4"

services:
  ros-master:
    network_mode: host
    image: ros:noetic-ros-core
    container_name: ros-master
    environment:
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - ROS_IP=${ADRESS_IP}
    command: stdbuf -o L roscore

  # sonia-ros-bridge:
  #     image: ghcr.io/sonia-auv/sonia-ros-bridge/sonia-ros-bridge:x86-perception-latest
  #     container_name: sonia-ros-bridge
  #     environment:
  #       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #       - ROS_IP=${ADRESS_IP}
  #     network_mode: host
  #     depends_on:
  #       - ros-master
  #     command:
  #       - roslaunch
  #       - --wait
  #       - --log
  #       - rosbridge_server
  #       - rosbridge_websocket.launch

  sonia-ros-tcp-endpoint:
    image: ghcr.io/sonia-auv/sonia-ros-tcp-endpoint/sonia-ros-tcp-endpoint:x86-perception-latest
    container_name: sonia-ros-tcp-endpoint
    network_mode: host
    depends_on:
      - ros-master
    command:
      - roslaunch
      - --wait
      - ros_tcp_endpoint
      - endpoint.launch
      
  # octopus_telemetry:
  #   image: ghcr.io/sonia-auv/octopus-telemetry:develop
  #   container_name: octopus_telemetry
  #   network_mode: host
  #   environment:
  #     - REACT_APP_BRIDGE_IP=${ADRESS_IP}
  #     - REACT_APP_AUV=${AUV}
  #   depends_on: 
  #     - sonia-ros-bridge

  proc_mapping:
    image: ghcr.io/sonia-auv/proc_mapping/proc_mapping:x86-perception-develop
    container_name: proc_mapping
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
    network_mode: host
    depends_on:
      - ros-master

  proc_image_processing:
    image: ghcr.io/sonia-auv/proc_image_processing/proc_image_processing:x86-perception-feature-solve-deep-learning-bug
    container_name: proc_image_processing
    environment:
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - ROS_IP=${ADRESS_IP}
    network_mode: host
    volumes:
      - ${ROS_SONIA_WS}/src/config_filterchain:/home/sonia/ros_sonia_ws/src/proc_image_processing/config
    depends_on:
       - ros-master

  proc_control:
    image: ghcr.io/sonia-auv/proc_control/proc_control:x86-perception-fix-target-reached
    container_name: proc_control
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - AUV=${LOCAL_AUV}
    network_mode: host
    privileged: true
    depends_on:
      - ros-master

  proc_planner:
    image: ghcr.io/sonia-auv/proc_planner/proc_planner:x86-perception-develop
    container_name: proc_planner
    environment:
      - ROS_IP=${ADRESS_IP}
      - ROS_MASTER_URI=http://${ADRESS_IP}:11311
      - AUV=${AUV}
    network_mode: host
    privileged: true
    depends_on:
      - ros-master

  # provider_kill_mission:
  #   image: ghcr.io/sonia-auv/provider_kill_mission/provider_kill_mission:x86-perception-develop
  #   container_name: provider_kill_mission
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # proc_mapping:
  #   image: ghcr.io/sonia-auv/proc_mapping/proc_mapping:x86-perception-latest
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # proc_navigation:
  #   image: ghcr.io/sonia-auv/proc_navigation/proc_navigation:x86-perception-latest
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # proc_actuators:
  #   image: ghcr.io/sonia-auv/proc_actuators/proc_actuators:x86-perception-develop
  #   container_name: proc_actuators
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # proc_hydrophone:
  #   image: ghcr.io/sonia-auv/proc_hydrophone/proc_hydrophone:x86-perception-develop
  #   container_name: proc_hydrophone
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # provider_dvl:
  #   image: ghcr.io/sonia-auv/provider_dvl/provider_dvl:x86-perception-feature-pathfinder-dvl
  #   container_name: provider_dvl
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # provider_hydrophone:
  #   image: ghcr.io/sonia-auv/provider_hydrophone/provider_hydrophone:x86-perception-develop
  #   container_name: provider_hydrophone
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   privileged: true
  #   volumes:
  #     - /dev/ttyUSB0:/dev/ttyUSB0
  #   depends_on:
  #     - ros-master

  # provider_thruster:
  #   image: ghcr.io/sonia-auv/provider_thruster/provider_thruster:x86-perception-develop
  #   container_name: provider_thruster
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   privileged: true
  #   depends_on:
  #     - ros-master

  # provider_imu:
  #   image: ghcr.io/sonia-auv/provider_imu/provider_imu:x86-perception-develop
  #   container_name: provider_imu
  #   environment:
  #   - ROS_IP=${ADRESS_IP}
  #   - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   privileged: true
  #   volumes:
  #     - /dev/ttyUSB0:/dev/ttyUSB0
  #   depends_on:
  #     - ros-master

  # provider_power:
  #   image: ghcr.io/sonia-auv/provider_power/provider_power:x86-perception-develop
  #   container_name: provider_power
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     - AUV=${LOCAL_AUV}
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # provider_actuators:
  #   image: ghcr.io/sonia-auv/provider_actuators/provider_actuators:x86-perception-develop
  #   container_name: provider_actuators
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311    
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # provider_sonar:
  #   image: ghcr.io/sonia-auv/provider_sonar/provider_sonar:x86-perception-develop
  #   container_name: provider_sonar
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   depends_on:
  #     - ros-master

  # interface_rs485:
  #   image: ghcr.io/sonia-auv/interface_rs485/interface_rs485:x86-perception-develop
  #   container_name: interface_rs485
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     - AUV=${AUV}
  #   network_mode: host
  #   privileged: true
  #   volumes:
  #     - /dev/ttyUSB0:/dev/ttyUSB0
  #   depends_on:
  #    - ros-master

  # interface_rs485:
  #   image: ghcr.io/sonia-auv/interface_rs485/interface_rs485:x86-perception-develop
  #   container_name: interface_rs485
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     - AUV=${LOCAL_AUV}
  #   network_mode: host
  #   privileged: true
  #   depends_on:
  #    - ros-master
  #   command:
  #    - roslaunch
  #    - --wait
  #    - interface_rs485
  #    - interface_rs485_sim.launch

  # provider_vision:
  #   image: ghcr.io/sonia-auv/provider_vision/provider_vision:x86-perception-feature-testing-modif
  #   container_name: provider_vision
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     - AUV=${AUV}
  #   network_mode: host
  #   privileged: true
  #   devices:
  #     - /dev/CAM0:/dev/CAM0
  #   depends_on:
  #     - ros-master
  #   command: stdbuf -o L roslaunch --wait provider_vision provider_vision.launch

  # simulink_monitor:
  #   image: ghcr.io/sonia-auv/simulink-monitor/simulink-monitor:x86-perception-latest
  #   container_name: simulink_monitor
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #   network_mode: host
  #   privileged: true
  #   ports: 
  #     - "22:22"
  #     - "17725:17725"
  #   depends_on:
  #     - ros-master

  # provider_underwater_com:
  #     image: ghcr.io/sonia-auv/provider_underwater_com/provider_underwater_com:x86-perception-develop
  #     container_name: provider_underwater_com
  #     environment:
  #       - ROS_IP=${ADRESS_IP}
  #       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     network_mode: host
  #     privileged: true
  #     devices:
  #       - /dev/ttyUSB0:/dev/ttyUSB0
  #     depends_on:
  #       - ros-master

  # proc_underwater_com:
  #     image: ghcr.io/sonia-auv/proc_underwater_com/proc_underwater_com:x86-perception-feature-refactoring
  #     container_name: proc_underwater_com
  #     environment:
  #       - ROS_IP=${ADRESS_IP}
  #       - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #       - AUV=${AUV}
  #     network_mode: host
  #     depends_on:
  #       - ros-master

  # proc_planner:
  #   image: ghcr.io/sonia-auv/proc_planner/proc_planner:x86-perception-develop
  #   container_name: proc_planner
  #   environment:
  #     - ROS_IP=${ADRESS_IP}
  #     - ROS_MASTER_URI=http://${ADRESS_IP}:11311
  #     - AUV=${AUV}
  #   network_mode: host
  #   privileged: true
  #   depends_on:
  #     - ros-master